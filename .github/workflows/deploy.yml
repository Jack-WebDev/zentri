name: Deploy to AWS

on:
  push:
    branches: [main]

env:
  CI: true
  AWS_REGION: "af-south-1"
  STAGE: "prod"

jobs:
  deployment:
    name: Deploy App
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: prod
    permissions:
      id-token: write
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - name: Activate pnpm 10.x
        run: corepack prepare pnpm@10.15.1 --activate

      - name: Set up Node (with pnpm cache)
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"

      - name: Restore Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-node20-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-node20-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.ref_name }}-
            turbo-${{ runner.os }}-node20-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Generate Drizzle migrations
        run: pnpm --filter @zentri/db run db:generate

      - name: List generated migrations
        run: ls -la packages/db/src/db/migrations || true

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-action-zentri-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy
        run: pnpm exec sst deploy --stage=${{ env.STAGE }}
